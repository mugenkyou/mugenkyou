name: Update Banner & Daily Activity

on:
  schedule:
    # Runs every 10 minutes
    - cron: '*/10 * * * *'
  workflow_dispatch:
    inputs:
      mode:
        description: 'Choose banner mode: auto uses time; day/night override; toggle flips'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - day
          - night
          - toggle
      force_commit:
        description: 'Force refresh (always writes file and commits even if same)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

jobs:
  update-banner:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      # Install ImageMagick for image processing
      - name: Install ImageMagick
        run: sudo apt-get update && sudo apt-get install -y imagemagick

      # Create assets directory if it doesn't exist
      - name: Create assets directory
        run: mkdir -p assets

      # Update header image based on time of day
      - name: Update header image based on time
        env:
          INPUT_MODE: ${{ github.event.inputs.mode }}
          INPUT_FORCE_COMMIT: ${{ github.event.inputs.force_commit }}
        run: |
          export TZ="Asia/Kolkata"
          current_hour=$(date +%H)
          echo "Current hour in IST is $current_hour"
          MODE=${INPUT_MODE:-auto}
          FORCE_COMMIT=${INPUT_FORCE_COMMIT:-false}
          # For scheduled runs, default to forcing a refresh so the file changes
          if [ "${GITHUB_EVENT_NAME}" = "schedule" ] && [ "${INPUT_FORCE_COMMIT}" = "" ]; then
            FORCE_COMMIT=true
          fi
          echo "Requested mode: $MODE | Force commit: $FORCE_COMMIT"
          
          # Store previous file hash if it exists
          if [ -f assets/dynamic-header.gif ]; then
            PREV_HASH=$(md5sum assets/dynamic-header.gif | cut -d' ' -f1)
            echo "Previous file hash: $PREV_HASH"
          else
            PREV_HASH=""
            echo "No previous dynamic-header.gif found"
          fi
          
          choose_day() {
            echo "Selecting DAY banner"
            if [ -f assets/day.gif ]; then
              if [ "$FORCE_COMMIT" = "true" ]; then
                convert assets/day.gif -set comment "forced=$(TZ=Asia/Kolkata date +%s)" assets/dynamic-header.gif
              else
                cp assets/day.gif assets/dynamic-header.gif
              fi
            else
              echo "Error: assets/day.gif not found!"; exit 1
            fi
          }
          choose_night() {
            echo "Selecting NIGHT banner"
            if [ -f assets/night.jpg ]; then
              convert assets/night.jpg -resize 800x200 -gravity center -extent 800x200 -set comment "ts=$(TZ=Asia/Kolkata date +%s)" assets/dynamic-header.gif
            else
              echo "Error: assets/night.jpg not found!"; exit 1
            fi
          }

          case "$MODE" in
            day)
              choose_day ;;
            night)
              choose_night ;;
            toggle)
              if [ -f assets/dynamic-header.gif ] && [ -f assets/day.gif ]; then
                CUR_HASH=$(md5sum assets/dynamic-header.gif | cut -d' ' -f1)
                DAY_HASH=$(md5sum assets/day.gif | cut -d' ' -f1)
                if [ "$CUR_HASH" = "$DAY_HASH" ]; then
                  echo "Current is DAY, toggling to NIGHT"
                  choose_night
                else
                  echo "Current is NIGHT/other, toggling to DAY"
                  choose_day
                fi
              else
                # Fallback: toggle relative to time
                if (( current_hour >= 6 && current_hour < 18 )); then
                  choose_night
                else
                  choose_day
                fi
              fi
              ;;
            auto|*)
              if (( current_hour >= 6 && current_hour < 18 )); then
                echo "It's daytime (6 AM - 6 PM). Using day.gif"
                choose_day
              else
                echo "It's nighttime (6 PM - 6 AM). Using night.jpg"
                choose_night
              fi
              ;;
          esac
          
          # Check if file actually changed
          if [ -f assets/dynamic-header.gif ]; then
            NEW_HASH=$(md5sum assets/dynamic-header.gif | cut -d' ' -f1)
            echo "New file hash: $NEW_HASH"
            if [ "$PREV_HASH" = "$NEW_HASH" ]; then
              if [ "$FORCE_COMMIT" = "true" ]; then
                echo "File unchanged but force requested, will commit"
                echo "SKIP_COMMIT=false" >> $GITHUB_ENV
                echo "ALLOW_EMPTY=true" >> $GITHUB_ENV
              else
                echo "File content unchanged, no need to commit"
                echo "SKIP_COMMIT=true" >> $GITHUB_ENV
              fi
            else
              echo "File content changed, will commit"
              echo "SKIP_COMMIT=false" >> $GITHUB_ENV
            fi
          else
            echo "Failed to create dynamic-header.gif"
            exit 1
          fi

      # Commit and push the updated banner to main branch
      - name: Commit and push banner changes
        env:
          GH_REPO: ${{ github.repository }}
        run: |
          # Configure git
          git config user.name "mugenkyou"
          git config user.email "mugenkyou@users.noreply.github.com"
          
          # Check if we should skip commit
          if [ "$SKIP_COMMIT" = "true" ]; then
            echo "Skipping commit - no changes detected"
            exit 0
          fi
          
          # Add the updated banner
          git add assets/dynamic-header.gif
          
          # Check if there are actually staged changes
          if git diff --staged --quiet; then
            echo "No staged changes to commit"
          else
            # Get current time for commit message
            CURRENT_TIME=$(TZ="Asia/Kolkata" date '+%Y-%m-%d %H:%M:%S IST')
            COMMIT_MSG="🔄 Auto-update banner for $(TZ="Asia/Kolkata" date '+%H:%M IST') - $CURRENT_TIME"
            
            echo "Committing changes with message: $COMMIT_MSG"
            if [ "${ALLOW_EMPTY}" = "true" ]; then
              git commit --allow-empty -m "$COMMIT_MSG"
            else
              git commit -m "$COMMIT_MSG"
            fi
            
            # Push changes using GITHUB_TOKEN-provisioned remote
            git push origin HEAD:main
            echo "✅ Changes pushed successfully!"
          fi

      - name: Success message
        run: |
          echo "✅ Banner workflow completed successfully!"
          echo "🕐 Current time: $(TZ='Asia/Kolkata' date)"
          echo "📁 Banner saved to: assets/dynamic-header.gif"
          echo "🌅 Daytime: 6 AM - 6 PM (day.gif)"
          echo "🌙 Nighttime: 6 PM - 6 AM (night.jpg converted to gif)"